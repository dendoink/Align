webpackJsonp([3],{Q8jg:function(t,E,a){"use strict";Object.defineProperty(E,"__esModule",{value:!0});var s={render:function(){this.$createElement;this._self._c;return this._m(0)},staticRenderFns:[function(){var t=this,E=t.$createElement,a=t._self._c||E;return a("div",{staticClass:"content"},[a("hr"),t._v(" "),a("h2",{attrs:{id:"name%3A-2018-17-22-gitlayout%3A-posttitle%3A-%22how-to-use-git%3F%22info%3A-%22%E5%A6%82%E6%9E%9C%E4%BD%A0%E8%BF%98%E6%B2%A1%E6%9C%89%E4%B8%80%E4%B8%AAgithub%E7%9A%84%E8%B4%A6%E5%8F%B7%2C%E9%82%A3%E4%B9%88%E4%BD%A0%E5%8F%AF%E4%BB%A5%E6%B3%A8%E5%86%8C%E4%B8%80%E4%B8%AA%2C%E5%9B%A0%E4%B8%BA%E8%BF%99%E6%98%AF%E4%BD%9C%E4%B8%BA%E4%B8%80%E5%8F%AA%E7%A8%8B%E5%BA%8F%E7%8C%BF%E5%BF%85%E4%B8%8D%E5%8F%AF%E5%B0%91%E7%9A%84%EF%BC%8C%E8%80%8C%E4%BD%BF%E7%94%A8github%E7%9A%84%E8%BF%87%E7%A8%8B%E4%B8%AD%EF%BC%8C%E4%BD%A0%E9%9C%80%E8%A6%81%E5%AD%A6%E4%BC%9Agit%E7%9A%84%E7%9B%B8%E5%85%B3%E6%93%8D%E4%BD%9C%E3%80%82%22date%3A-2017-12-21categories%3A-gittags%3A-%5Bgit%2Ctutorial%5Dcoverimg%3A-%22http%3A%2F%2Fww1.sinaimg.cn%2Flarge%2F88b26e1cgy1frpr0yafacj20sg0lc48k.jpg%22"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#name%3A-2018-17-22-gitlayout%3A-posttitle%3A-%22how-to-use-git%3F%22info%3A-%22%E5%A6%82%E6%9E%9C%E4%BD%A0%E8%BF%98%E6%B2%A1%E6%9C%89%E4%B8%80%E4%B8%AAgithub%E7%9A%84%E8%B4%A6%E5%8F%B7%2C%E9%82%A3%E4%B9%88%E4%BD%A0%E5%8F%AF%E4%BB%A5%E6%B3%A8%E5%86%8C%E4%B8%80%E4%B8%AA%2C%E5%9B%A0%E4%B8%BA%E8%BF%99%E6%98%AF%E4%BD%9C%E4%B8%BA%E4%B8%80%E5%8F%AA%E7%A8%8B%E5%BA%8F%E7%8C%BF%E5%BF%85%E4%B8%8D%E5%8F%AF%E5%B0%91%E7%9A%84%EF%BC%8C%E8%80%8C%E4%BD%BF%E7%94%A8github%E7%9A%84%E8%BF%87%E7%A8%8B%E4%B8%AD%EF%BC%8C%E4%BD%A0%E9%9C%80%E8%A6%81%E5%AD%A6%E4%BC%9Agit%E7%9A%84%E7%9B%B8%E5%85%B3%E6%93%8D%E4%BD%9C%E3%80%82%22date%3A-2017-12-21categories%3A-gittags%3A-%5Bgit%2Ctutorial%5Dcoverimg%3A-%22http%3A%2F%2Fww1.sinaimg.cn%2Flarge%2F88b26e1cgy1frpr0yafacj20sg0lc48k.jpg%22","aria-hidden":"true"}},[t._v("#")]),t._v(' name: 2018-17-22-Git\nlayout: post\ntitle:  "How to use git?"\ninfo: "如果你还没有一个Github的账号,那么你可以注册一个,因为这是作为一只程序猿必不可少的，而使用Github的过程中，你需要学会Git的相关操作。"\ndate:   2017-12-21\ncategories: Git\ntags: [Git,Tutorial]\ncoverimg: "http://ww1.sinaimg.cn/large/88b26e1cgy1frpr0yafacj20sg0lc48k.jpg"')]),t._v(" "),a("h2",{attrs:{id:"%E7%9B%AE%E5%BD%95"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#%E7%9B%AE%E5%BD%95","aria-hidden":"true"}},[t._v("#")]),t._v(" 目录")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#%E7%9B%AE%E5%BD%95"}},[t._v("目录")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E4%B8%BB%E8%A6%81%E5%86%85%E5%AE%B9"}},[t._v("主要内容")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E5%85%B6%E4%BB%96%E5%86%85%E5%AE%B9"}},[t._v("其他内容")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#repository%E6%93%8D%E4%BD%9C"}},[t._v("Repository操作")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#%E6%96%B0%E5%BB%BA%E4%B8%80%E4%B8%AA%E6%96%87%E4%BB%B6%E5%A4%B9"}},[t._v("新建一个文件夹")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E6%8F%90%E4%BA%A4%E4%BB%A3%E7%A0%81%E5%88%B0%E6%9A%82%E5%AD%98%E5%8C%BA"}},[t._v("提交代码到暂存区")])])])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E5%85%B3%E4%BA%8E%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93%E7%9A%84%E4%B8%80%E4%BA%9B%E9%85%8D%E7%BD%AE"}},[t._v("关于远程仓库的一些配置")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#%E5%88%9B%E5%BB%BA%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93"}},[t._v("创建远程仓库")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#clone-repository%E5%88%B0%E6%9C%AC%E5%9C%B0"}},[t._v("Clone Repository到本地")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E5%A6%82%E4%BD%95%E6%8F%90%E4%BA%A4%E6%9B%B4%E6%94%B9%E5%88%B0%E8%BF%9C%E7%A8%8B%E7%9A%84git%E4%BB%93%E5%BA%93%E4%B8%AD"}},[t._v("如何提交更改到远程的Git仓库中")])])])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4%E5%8F%8A%E8%AF%B4%E6%98%8E"}},[t._v("常用指令及说明：")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C"}},[t._v("基本操作")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#%E6%96%87%E4%BB%B6%E6%8E%92%E9%99%A4%E5%90%8C%E6%AD%A5"}},[t._v("文件排除同步")])])])])]),t._v(" "),a("h2",{attrs:{id:"%E4%B8%BB%E8%A6%81%E5%86%85%E5%AE%B9"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#%E4%B8%BB%E8%A6%81%E5%86%85%E5%AE%B9","aria-hidden":"true"}},[t._v("#")]),t._v(" 主要内容")]),t._v(" "),a("ul",[a("li",[t._v("新建本地的repos的过程")]),t._v(" "),a("li",[t._v("如何关联本地仓库和远程仓库")]),t._v(" "),a("li",[t._v("如何提交代码到托管平台")]),t._v(" "),a("li",[t._v("知识点补充")])]),t._v(" "),a("h2",{attrs:{id:"%E5%85%B6%E4%BB%96%E5%86%85%E5%AE%B9"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#%E5%85%B6%E4%BB%96%E5%86%85%E5%AE%B9","aria-hidden":"true"}},[t._v("#")]),t._v(" 其他内容")]),t._v(" "),a("ul",[a("li",[t._v("Git 安装:（略）")]),t._v(" "),a("li",[t._v("Git 初次运行配置：（略）参见官网的配置")])]),t._v(" "),a("h2",{attrs:{id:"repository%E6%93%8D%E4%BD%9C"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#repository%E6%93%8D%E4%BD%9C","aria-hidden":"true"}},[t._v("#")]),t._v(" Repository操作")]),t._v(" "),a("h3",{attrs:{id:"%E6%96%B0%E5%BB%BA%E4%B8%80%E4%B8%AA%E6%96%87%E4%BB%B6%E5%A4%B9"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#%E6%96%B0%E5%BB%BA%E4%B8%80%E4%B8%AA%E6%96%87%E4%BB%B6%E5%A4%B9","aria-hidden":"true"}},[t._v("#")]),t._v(" 新建一个文件夹")]),t._v(" "),a("p",[t._v("我们先在本地新建一个文件夹作为repos，然后在这个目录下右键 GitBash Here(MacOS环境下 ,可以打开iTerm2 然后进入到对应的目录下)")]),t._v(" "),a("pre",{staticClass:"hljs"},[a("code",[t._v("git init     "),a("span",{staticClass:"hljs-comment"},[t._v("#初始化Git的环境")]),t._v("\nls           "),a("span",{staticClass:"hljs-comment"},[t._v("#查看当前目录的文件列表")]),t._v("\n")])]),t._v(" "),a("p",[t._v("这里我们可以看到多了一个文件夹.git，然后来看下官方的描述：")]),t._v(" "),a("p",[a("em",[t._v("“所有 Git 需要的数据和资源都存放在这个目录中。不过目前，仅仅是按照既有的结构框架初始化好了里边所有的文件和目录，但我们还没有开始跟踪管理项目中的任何一个文件。”")])]),t._v(" "),a("p",[t._v("我暂时将它理解为Git的Runtime Environment ，接下来的文档就开始描述track文件。")]),t._v(" "),a("h3",{attrs:{id:"%E6%8F%90%E4%BA%A4%E4%BB%A3%E7%A0%81%E5%88%B0%E6%9A%82%E5%AD%98%E5%8C%BA"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#%E6%8F%90%E4%BA%A4%E4%BB%A3%E7%A0%81%E5%88%B0%E6%9A%82%E5%AD%98%E5%8C%BA","aria-hidden":"true"}},[t._v("#")]),t._v(" 提交代码到暂存区")]),t._v(" "),a("p",[t._v("README.md是怎么回事呢 ?")]),t._v(" "),a("p",[t._v("如果你从来没有用过github或者类似的代码托管平台 ,并且你也没有接触过markdown语法 ,可能你确实不熟悉这个.md结尾的文件.")]),t._v(" "),a("p",[t._v("其实很简单,就像你是一位大厨,现在你做了一道很牛的菜,现在你把这道菜(成品)放在了样品台上(代码托管平台) .")]),t._v(" "),a("p",[t._v("现在有很多的人都在吃你做的菜, 但是他们想知道这道菜应该怎么做,怎么吃?现在你就需要提供一个菜谱(README.md)也就是一个用markdown语法所写的说明书.而这个README的命名也就是“请读我”")]),t._v(" "),a("p",[t._v("明白了这个文件的含义,我们继续操作:")]),t._v(" "),a("pre",{staticClass:"hljs"},[a("code",[t._v("vim README "),a("span",{staticClass:"hljs-comment"},[t._v("#新建一个README文件")]),t._v("\nvi  README "),a("span",{staticClass:"hljs-comment"},[t._v("#编辑这个文件的内容")]),t._v("\n")])]),t._v(" "),a("p",[t._v('在编辑完成之后我曾经一度傻呵呵的不知道怎么保存退出，其实编辑好内容之后ESC 或者 ctrl + c 可以结束编辑，然后:wq 保存并且退出，注意：wq前面是有个：号的.\n接上之前所说的，下一条是commit指令，后面的-m "message body"指的是针对这次的提交的说明，这里的提交并不是提交到你的托管服务器上，而是提交到本地暂存区.\n那怎么提交代码到远程的仓库呢? 别着急我们慢慢来.')]),t._v(" "),a("pre",{staticClass:"hljs"},[a("code",[t._v("git add . 将当前有修改的文件都添加到暂存区 \ngit add README\ngit commit -m "),a("span",{staticClass:"hljs-string"},[t._v("'initial project version'")]),t._v("\n")])]),t._v(" "),a("h2",{attrs:{id:"%E5%85%B3%E4%BA%8E%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93%E7%9A%84%E4%B8%80%E4%BA%9B%E9%85%8D%E7%BD%AE"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#%E5%85%B3%E4%BA%8E%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93%E7%9A%84%E4%B8%80%E4%BA%9B%E9%85%8D%E7%BD%AE","aria-hidden":"true"}},[t._v("#")]),t._v(" 关于远程仓库的一些配置")]),t._v(" "),a("h3",{attrs:{id:"%E5%88%9B%E5%BB%BA%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#%E5%88%9B%E5%BB%BA%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93","aria-hidden":"true"}},[t._v("#")]),t._v(" 创建远程仓库")]),t._v(" "),a("p",[t._v("要推送(push)代码到远程仓库, 你首先需要一个远程仓库, 在这个例子里面 , 我们用Github 作为我们代码托管平台,如果你还没有一个Github的账号,那么你可以注册一个,因为这是作为一只程序猿必不可少的.\n注册完成后,我们可以在自己的账号下创建一个repository.叫什么名字好呢? 我选择的名字是 GitExample  然后你可能想输入一些描述.然后点击Create repository")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://ww1.sinaimg.cn/large/88b26e1cgy1from4si173j20q70ge0uk.jpg",alt:""}})]),t._v(" "),a("p",[t._v("创建后你还需要配置一下公共秘钥 ,因为Github上免费的仓库都是公开的 ,那么我们怎么来限制其他的人提交代码到我们的仓库呢?这就是密钥的用处了.\n密钥就像凭据 ,就像中国古代的虎符,你的电脑这边生成出来他独特的密钥之后, 要把这个密钥给你的Github账号也分配一份.这样你可以直接提交代码到这个Github账号下的仓库里了.\n具体怎么生成,Github又怎样配置,你可以百度”为github帐号添加SSH keys” 有很多的介绍,笔者就不在这里赘述了.")]),t._v(" "),a("h3",{attrs:{id:"clone-repository%E5%88%B0%E6%9C%AC%E5%9C%B0"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#clone-repository%E5%88%B0%E6%9C%AC%E5%9C%B0","aria-hidden":"true"}},[t._v("#")]),t._v(" Clone Repository到本地")]),t._v(" "),a("p",[t._v("我们已经创建好自己的仓库,并且配置好了密钥,现在我们可以来把远程的仓库克隆到本地了, 到这里你可能会想, 那我们之前创建的本地仓库有什么用呢? 别急, 到后面我们添加远程仓库的时候可以用得上.")]),t._v(" "),a("p",[t._v("固定的Clone指令的格式应该是git clone [url] 这个url是你的repos的远程路径，下面是例子")]),t._v(" "),a("pre",{staticClass:"hljs"},[a("code",[t._v("git "),a("span",{staticClass:"hljs-built_in"},[t._v("clone")]),t._v(" git://github.com/dendiSe7enGitHub/testAboutGit.git Testgit "),a("span",{staticClass:"hljs-comment"},[t._v("#不要clone我的项目到本地,因为这个项目已经删除了...")]),t._v("\n")])]),t._v(" "),a("p",[t._v("这里最后的Testgit是我给本地repos取的名字，如果不写默认与源同名。这里值得一提的是，在之前搭建hexo的过程中，我已经有clone过很多次项目到本地，但是我都是用的：")]),t._v(" "),a("pre",{staticClass:"hljs"},[a("code",[t._v("git "),a("span",{staticClass:"hljs-built_in"},[t._v("clone")]),t._v(" git@github.com:DendiSe7enGitHub/moreTestAboutGit.git "),a("span",{staticClass:"hljs-comment"},[t._v("#不要clone我的项目到本地,因为这个项目已经删除了...")]),t._v("\n")])]),t._v(" "),a("p",[t._v("是不是不一样？这是因为git支持多种传输协议:")]),t._v(" "),a("ul",[a("li",[t._v("官方的文档: "),a("code",[t._v("git://")])]),t._v(" "),a("li",[a("code",[t._v("http://")]),t._v("  -> HTTP协议")]),t._v(" "),a("li",[a("code",[t._v("user@server:/path.git")]),t._v(" -> SSH协议")])]),t._v(" "),a("h3",{attrs:{id:"%E5%A6%82%E4%BD%95%E6%8F%90%E4%BA%A4%E6%9B%B4%E6%94%B9%E5%88%B0%E8%BF%9C%E7%A8%8B%E7%9A%84git%E4%BB%93%E5%BA%93%E4%B8%AD"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#%E5%A6%82%E4%BD%95%E6%8F%90%E4%BA%A4%E6%9B%B4%E6%94%B9%E5%88%B0%E8%BF%9C%E7%A8%8B%E7%9A%84git%E4%BB%93%E5%BA%93%E4%B8%AD","aria-hidden":"true"}},[t._v("#")]),t._v(" 如何提交更改到远程的Git仓库中")]),t._v(" "),a("p",[t._v("首先我们进入到我们clone下来的仓库里面.")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://ww1.sinaimg.cn/large/88b26e1cgy1from5u6gcaj20g3059aaq.jpg",alt:""}})]),t._v(" "),a("p",[t._v("很明显,现在我们在一个空仓库里面,因为我们在创建之后,什么代码都没有提交过.后面有一个小括号显示我们是在master分支上.也就是主分支(至于什么是分支,如果操作分支,之后的博文会谈到的)\n现在我们可以在这目录下创建一个文件,名字叫README.md和之前一样.")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://ww1.sinaimg.cn/large/88b26e1cgy1from66umq0j20fo07pgna.jpg",alt:""}})]),t._v(" "),a("p",[t._v("创建好之后,我们输入"),a("code",[t._v("git status")]),t._v("发现: 我们刚刚创建的文件被标为了红色, status = 状态, 也就是说现在我们本地的仓库相对于它被创建之后,有了变化,而这些变化的文件就会标为红色.\n接下来我们输入"),a("code",[t._v("git add")]),t._v(" . 请注意,这个"),a("code",[t._v("add")]),t._v("后面是有一个英文的句号"),a("code",[t._v(".")]),t._v("的.\n输入完成后,我们用 "),a("code",[t._v("git status")]),t._v("命令再次查看我们的本地master分支的状态.")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://ww1.sinaimg.cn/large/88b26e1cgy1from6gxv77j20fr0bbjtz.jpg",alt:""}})]),t._v(" "),a("p",[t._v("发现什么不一样了吗 ?原本是红色的README.md变成了绿色,这证明,我们把修改加入到了暂存区.\n现在我们要提交这个更改,并且将这个更改推送到远程分支.")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://ww1.sinaimg.cn/large/88b26e1cgy1from8dg5noj20fs08v0ur.jpg",alt:""}})]),t._v(" "),a("p",[t._v("现在我们用"),a("code",[t._v("git commit -m")]),t._v("提交了代码,并且用"),a("code",[t._v("push")]),t._v("命令吧代码推送到了远程仓库."),a("code",[t._v("origin")]),t._v("这里指的我们远程仓库的名字.\n你可能会想,我们并没有添加过远程仓库,也没有给它命名啊?但是事实是,我们在clone远程仓库到本地的这个过程中,我们本地的"),a("code",[t._v("master")]),t._v("分支直接获取到了远程的分支(就是我们输入的指令的最后一个参数master),并且把远程的仓库默认取名为"),a("code",[t._v("origin")]),t._v(".\n那么为什么有"),a("code",[t._v("-u")]),t._v("呢,["),a("code",[t._v("-u")]),t._v("="),a("code",[t._v("--set-upstream")]),t._v("] 那它是什么意思呢?\n其实当我们本地的项目只追踪了一个远程分支的时候,我们是可以省略"),a("code",[t._v("-u")]),t._v("的,但是当我们远程有多个分支,且本地的一个分支可能tracking了不同的远程分支的时候,就需要我们用-u来指定这个本地分支应该tracking哪个远程分支.\n举个例子:本地你有一个小金库,比如叫做master,同时远程有三家银行,分别叫master银行,feature银行,develop银行.\n首先,你把金库的钱存到了master银行里,并且你希望下次你的金库钱都自动存到这个master银行里.\n然后过了一段时间,你觉得feature银行更好,你把金库的钱存到了feature银行里,并且希望下次金库的钱自动转到master银行.\n这时候你执行了")]),t._v(" "),a("pre",{pre:!0,attrs:{class:"hljs"}},[a("code",[t._v("\tgit push -origin feature\n")])]),t._v(" "),a("p",[t._v("那么下次你金库的钱变多了.你想存入到feature银行,你可以省略很多命令,你只需要:")]),t._v(" "),a("pre",{pre:!0,attrs:{class:"hljs"}},[a("code",[t._v("\tgit push\n")])]),t._v(" "),a("p",[t._v("因为这时候,你已经把金库和feature银行关联起来了.\n回到我们刚刚的问题,这里的银行就是远程分支,金库就是你的本地仓库,那-u就是指定你现在tracking的仓库是什么,也就是你把现在的本地分支关联到哪个远程分支.")]),t._v(" "),a("h2",{attrs:{id:"%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4%E5%8F%8A%E8%AF%B4%E6%98%8E%EF%BC%9A"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4%E5%8F%8A%E8%AF%B4%E6%98%8E%EF%BC%9A","aria-hidden":"true"}},[t._v("#")]),t._v(" 常用指令及说明：")]),t._v(" "),a("h3",{attrs:{id:"%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C","aria-hidden":"true"}},[t._v("#")]),t._v(" 基本操作")]),t._v(" "),a("pre",{staticClass:"hljs"},[a("code",[t._v("git status"),a("span",{staticClass:"hljs-comment"},[t._v("# 检查当前文件状态")]),t._v("\ngit add README "),a("span",{staticClass:"hljs-comment"},[t._v("# 跟踪新文件")]),t._v("\ngit diff --staged 看已经暂存起来的文件和上次提交时的快照之间的差异\ngit commit 提交更新\ngit commit -a "),a("span",{staticClass:"hljs-comment"},[t._v("#跳过使用暂存区域")]),t._v("\ngit rm grit.gemspec "),a("span",{staticClass:"hljs-comment"},[t._v("#移除文件 从暂存区域移除")]),t._v("\ngit pull \n")])]),t._v(" "),a("h3",{attrs:{id:"%E6%96%87%E4%BB%B6%E6%8E%92%E9%99%A4%E5%90%8C%E6%AD%A5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#%E6%96%87%E4%BB%B6%E6%8E%92%E9%99%A4%E5%90%8C%E6%AD%A5","aria-hidden":"true"}},[t._v("#")]),t._v(" 文件排除同步")]),t._v(" "),a("pre",{staticClass:"hljs"},[a("code",[t._v("vim .gitignore"),a("span",{staticClass:"hljs-comment"},[t._v("#创建一个名为.gitignore的文件")]),t._v("\nvi .gitignore "),a("span",{staticClass:"hljs-comment"},[t._v("#编辑文件内容")]),t._v("\n*.[oa] "),a("span",{staticClass:"hljs-comment"},[t._v("#在提交时忽略.o 或者 .a 的文件")]),t._v("\n*~     "),a("span",{staticClass:"hljs-comment"},[t._v("#在提交时忽略.~ 的文件")]),t._v("\n"),a("span",{staticClass:"hljs-comment"},[t._v("# 此为注释 – 将被 Git 忽略")]),t._v("\n"),a("span",{staticClass:"hljs-comment"},[t._v("# 忽略所有 .a 结尾的文件")]),t._v("\n*.a\n"),a("span",{staticClass:"hljs-comment"},[t._v("# 但 lib.a 除外")]),t._v("\n!lib.a\n"),a("span",{staticClass:"hljs-comment"},[t._v("# 仅仅忽略项目根目录下的 TODO 文件，不包括 subdir/TODO")]),t._v("\n/TODO\n\n"),a("span",{staticClass:"hljs-comment"},[t._v("# 忽略 build/ 目录下的所有文件")]),t._v("\nbuild/\n\n    "),a("span",{staticClass:"hljs-comment"},[t._v("# 会忽略 doc/notes.txt 但不包括 doc/server/arch.txt")]),t._v("\ndoc/*.txt\n\n    "),a("span",{staticClass:"hljs-comment"},[t._v("# ignore all .txt files in the doc/ directory")]),t._v("\ndoc/**/*.txt\n")])]),t._v(" "),a("p",[t._v("有任何问题欢迎邮件或者讨论~")])])}]},e=a("VU/8")(null,s,!1,null,null,null);E.default=e.exports}});
//# sourceMappingURL=3.85def05d4c5693abcde0.js.map