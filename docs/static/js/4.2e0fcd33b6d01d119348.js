webpackJsonp([4],{qfiv:function(s,a,t){"use strict";Object.defineProperty(a,"__esModule",{value:!0});var n={render:function(){this.$createElement;this._self._c;return this._m(0)},staticRenderFns:[function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("div",{staticClass:"content"},[t("hr"),s._v(" "),t("h2",{attrs:{id:"name%3A-2018-04-25-reactlayout%3A-posttitle%3A-%22react-%E8%AE%BE%E8%AE%A1%E6%80%9D%E6%83%B3%22date%3A-2018-04-25categories%3A-reacttags%3A-%5Btutorial%2Creact%5Dcoverimg%3A-%22http%3A%2F%2Fww1.sinaimg.cn%2Flarge%2F88b26e1cgy1frpr39hxhnj20sg0lctha.jpg%22info%3A-%22%E6%9C%AC%E6%96%87%E6%98%AF-react-%E6%A0%B8%E5%BF%83%E5%BC%80%E5%8F%91%E8%80%85%E3%80%81%E6%9C%89-react-api-%E7%BB%88%E7%BB%93%E8%80%85%E4%B9%8B%E7%A7%B0%E7%9A%84-sebastian-markb%C3%A5ge-%E6%92%B0%E5%86%99%EF%BC%8C%E9%98%90%E8%BF%B0%E4%BA%86%E4%BB%96%E8%AE%BE%E8%AE%A1-react-%E7%9A%84%E5%88%9D%E8%A1%B7%E3%80%82%E9%98%85%E8%AF%BB%E6%AD%A4%E6%96%87%EF%BC%8C%E4%BD%A0%E8%83%BD%E7%AB%99%E5%9C%A8%E6%9B%B4%E9%AB%98%E7%9A%84%E9%AB%98%E5%BA%A6%E6%80%9D%E8%80%83-react-%E7%9A%84%E8%BF%87%E5%8E%BB%E3%80%81%E7%8E%B0%E5%9C%A8%E5%92%8C%E6%9C%AA%E6%9D%A5%E3%80%82%22"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#name%3A-2018-04-25-reactlayout%3A-posttitle%3A-%22react-%E8%AE%BE%E8%AE%A1%E6%80%9D%E6%83%B3%22date%3A-2018-04-25categories%3A-reacttags%3A-%5Btutorial%2Creact%5Dcoverimg%3A-%22http%3A%2F%2Fww1.sinaimg.cn%2Flarge%2F88b26e1cgy1frpr39hxhnj20sg0lctha.jpg%22info%3A-%22%E6%9C%AC%E6%96%87%E6%98%AF-react-%E6%A0%B8%E5%BF%83%E5%BC%80%E5%8F%91%E8%80%85%E3%80%81%E6%9C%89-react-api-%E7%BB%88%E7%BB%93%E8%80%85%E4%B9%8B%E7%A7%B0%E7%9A%84-sebastian-markb%C3%A5ge-%E6%92%B0%E5%86%99%EF%BC%8C%E9%98%90%E8%BF%B0%E4%BA%86%E4%BB%96%E8%AE%BE%E8%AE%A1-react-%E7%9A%84%E5%88%9D%E8%A1%B7%E3%80%82%E9%98%85%E8%AF%BB%E6%AD%A4%E6%96%87%EF%BC%8C%E4%BD%A0%E8%83%BD%E7%AB%99%E5%9C%A8%E6%9B%B4%E9%AB%98%E7%9A%84%E9%AB%98%E5%BA%A6%E6%80%9D%E8%80%83-react-%E7%9A%84%E8%BF%87%E5%8E%BB%E3%80%81%E7%8E%B0%E5%9C%A8%E5%92%8C%E6%9C%AA%E6%9D%A5%E3%80%82%22","aria-hidden":"true"}},[s._v("#")]),s._v(' name: 2018-04-25-React\nlayout: post\ntitle: "React 设计思想"\ndate:  2018-04-25\ncategories: React\ntags: [Tutorial,React]\ncoverimg: "http://ww1.sinaimg.cn/large/88b26e1cgy1frpr39hxhnj20sg0lctha.jpg"\ninfo: "本文是 React 核心开发者、有 React API 终结者之称的 Sebastian Markbåge 撰写，阐述了他设计 React 的初衷。阅读此文，你能站在更高的高度思考 React 的过去、现在和未来。"')]),s._v(" "),t("div",{staticClass:"tip custom-block"},[t("p",{staticClass:"custom-block-title"}),s._v(" "),t("p",[s._v("本文是 React 核心开发者、有 React API 终结者之称的 Sebastian Markbåge 撰写，阐述了他设计 React 的初衷。阅读此文，你能站在更高的高度思考 React 的过去、现在和未来。"),t("a",{attrs:{href:"https://github.com/reactjs/react-basic"}},[s._v("原文地址")])])]),s._v(" "),t("h2",{attrs:{id:"%E7%9B%AE%E5%BD%95"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#%E7%9B%AE%E5%BD%95","aria-hidden":"true"}},[s._v("#")]),s._v(" 目录")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#%E7%9B%AE%E5%BD%95"}},[s._v("目录")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#%E5%8F%98%E6%8D%A2transformation"}},[s._v("变换（Transformation）")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#%E6%8A%BD%E8%B1%A1abstraction"}},[s._v("抽象（Abstraction）")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#%E7%BB%84%E5%90%88composition"}},[s._v("组合（Composition）")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#%E7%8A%B6%E6%80%81state"}},[s._v("状态（State）")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#memoization"}},[s._v("Memoization")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#%E5%88%97%E8%A1%A8lists"}},[s._v("列表（Lists）")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#%E8%BF%9E%E7%BB%AD%E6%80%A7continuations"}},[s._v("连续性（Continuations）")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#state-map"}},[s._v("State Map")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#memoization-map"}},[s._v("Memoization Map")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#%E4%BB%A3%E6%95%B0%E6%95%88%E5%BA%94algebraic-effects"}},[s._v("代数效应（Algebraic Effects）")])])]),s._v(" "),t("p",[s._v("我写此文是想正式地阐述我心中 React 的"),t("a",{attrs:{href:"http://baike.baidu.com/view/2333986.htm"}},[s._v("心智模型")]),s._v("。目的是解释为什么我们会这样设计 React，同时你也可以根据这些论点反推出 React。")]),s._v(" "),t("p",[s._v("不可否认，此文中的部分论据或前提尚存争议，而且部分示例的设计可能存在 bug 或疏忽。这只是正式确定它的最初阶段。如果你有更好的完善它的想法可以随时提交 pull request。本文不会介绍框架细节中的奇技淫巧，相信这样能提纲挈领，让你看清 React 由简单到复杂的设计过程。")]),s._v(" "),t("p",[s._v("React.js 的真实实现中充满了具体问题的解决方案，渐进式的解法，算法优化，历史遗留代码，debug 工具以及其他一些可以让它真的具有高可用性的内容。这些代码可能并不稳定，因为未来浏览器的变化和功能权重的变化随时面临改变。所以具体的代码很难彻底解释清楚。")]),s._v(" "),t("p",[s._v("我偏向于选择一种我能完全 hold 住的简洁的心智模型来作介绍。")]),s._v(" "),t("h2",{attrs:{id:"%E5%8F%98%E6%8D%A2%EF%BC%88transformation%EF%BC%89"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#%E5%8F%98%E6%8D%A2%EF%BC%88transformation%EF%BC%89","aria-hidden":"true"}},[s._v("#")]),s._v(" 变换（Transformation）")]),s._v(" "),t("p",[s._v("设计 React 的核心前提是认为 UI 只是把数据通过映射关系变换成另一种形式的数据。同样的输入必会有同样的输出。这恰好就是纯函数。")]),s._v(" "),t("pre",{staticClass:"hljs"},[t("code",[t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),t("span",{staticClass:"hljs-title"},[s._v("NameBox")]),s._v("("),t("span",{staticClass:"hljs-params"},[s._v("name")]),s._v(") ")]),s._v("{\n  "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" { "),t("span",{staticClass:"hljs-attr"},[s._v("fontWeight")]),s._v(": "),t("span",{staticClass:"hljs-string"},[s._v("'bold'")]),s._v(", "),t("span",{staticClass:"hljs-attr"},[s._v("labelContent")]),s._v(": name };\n}\n")])]),s._v(" "),t("pre",{pre:!0,attrs:{class:"hljs"}},[t("code",[s._v("'Sebastian Markbåge' ->\n{ fontWeight: 'bold', labelContent: 'Sebastian Markbåge' };\n")])]),s._v(" "),t("h2",{attrs:{id:"%E6%8A%BD%E8%B1%A1%EF%BC%88abstraction%EF%BC%89"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#%E6%8A%BD%E8%B1%A1%EF%BC%88abstraction%EF%BC%89","aria-hidden":"true"}},[s._v("#")]),s._v(" 抽象（Abstraction）")]),s._v(" "),t("p",[s._v("你不可能仅用一个函数就能实现复杂的 UI。重要的是，你需要把 UI 抽象成多个隐藏内部细节，又可复用的函数。通过在一个函数中调用另一个函数来实现复杂的 UI，这就是抽象。")]),s._v(" "),t("pre",{staticClass:"hljs"},[t("code",[t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),t("span",{staticClass:"hljs-title"},[s._v("FancyUserBox")]),s._v("("),t("span",{staticClass:"hljs-params"},[s._v("user")]),s._v(") ")]),s._v("{\n  "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" {\n    "),t("span",{staticClass:"hljs-attr"},[s._v("borderStyle")]),s._v(": "),t("span",{staticClass:"hljs-string"},[s._v("'1px solid blue'")]),s._v(",\n    "),t("span",{staticClass:"hljs-attr"},[s._v("childContent")]),s._v(": [\n      "),t("span",{staticClass:"hljs-string"},[s._v("'Name: '")]),s._v(",\n      NameBox(user.firstName + "),t("span",{staticClass:"hljs-string"},[s._v("' '")]),s._v(" + user.lastName)\n    ]\n  };\n}\n")])]),s._v(" "),t("pre",{pre:!0,attrs:{class:"hljs"}},[t("code",[s._v("{ firstName: 'Sebastian', lastName: 'Markbåge' } ->\n{\n  borderStyle: '1px solid blue',\n  childContent: [\n    'Name: ',\n    { fontWeight: 'bold', labelContent: 'Sebastian Markbåge' }\n  ]\n};\n")])]),s._v(" "),t("h2",{attrs:{id:"%E7%BB%84%E5%90%88%EF%BC%88composition%EF%BC%89"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#%E7%BB%84%E5%90%88%EF%BC%88composition%EF%BC%89","aria-hidden":"true"}},[s._v("#")]),s._v(" 组合（Composition）")]),s._v(" "),t("p",[s._v("为了真正达到重用的特性，只重用叶子然后每次都为他们创建一个新的容器是不够的。你还需要可以包含其他抽象的容器再次进行组合。我理解的“组合”就是将两个或者多个不同的抽象合并为一个。")]),s._v(" "),t("pre",{staticClass:"hljs"},[t("code",[t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),t("span",{staticClass:"hljs-title"},[s._v("FancyBox")]),s._v("("),t("span",{staticClass:"hljs-params"},[s._v("children")]),s._v(") ")]),s._v("{\n  "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" {\n    "),t("span",{staticClass:"hljs-attr"},[s._v("borderStyle")]),s._v(": "),t("span",{staticClass:"hljs-string"},[s._v("'1px solid blue'")]),s._v(",\n    "),t("span",{staticClass:"hljs-attr"},[s._v("children")]),s._v(": children\n  };\n}\n\n"),t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),t("span",{staticClass:"hljs-title"},[s._v("UserBox")]),s._v("("),t("span",{staticClass:"hljs-params"},[s._v("user")]),s._v(") ")]),s._v("{\n  "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" FancyBox([\n    "),t("span",{staticClass:"hljs-string"},[s._v("'Name: '")]),s._v(",\n    NameBox(user.firstName + "),t("span",{staticClass:"hljs-string"},[s._v("' '")]),s._v(" + user.lastName)\n  ]);\n}\n")])]),s._v(" "),t("h2",{attrs:{id:"%E7%8A%B6%E6%80%81%EF%BC%88state%EF%BC%89"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#%E7%8A%B6%E6%80%81%EF%BC%88state%EF%BC%89","aria-hidden":"true"}},[s._v("#")]),s._v(" 状态（State）")]),s._v(" "),t("p",[s._v("UI 不单单是对服务器端或业务逻辑状态的复制。实际上还有很多状态是针对具体的渲染目标。举个例子，在一个 text field 中打字。它不一定要复制到其他页面或者你的手机设备。滚动位置这个状态是一个典型的你几乎不会复制到多个渲染目标的。")]),s._v(" "),t("p",[s._v("我们倾向于使用不可变的数据模型。我们把可以改变 state 的函数串联起来作为原点放置在顶层。")]),s._v(" "),t("pre",{staticClass:"hljs"},[t("code",[t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),t("span",{staticClass:"hljs-title"},[s._v("FancyNameBox")]),s._v("("),t("span",{staticClass:"hljs-params"},[s._v("user, likes, onClick")]),s._v(") ")]),s._v("{\n  "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" FancyBox([\n    "),t("span",{staticClass:"hljs-string"},[s._v("'Name: '")]),s._v(", NameBox(user.firstName + "),t("span",{staticClass:"hljs-string"},[s._v("' '")]),s._v(" + user.lastName),\n    "),t("span",{staticClass:"hljs-string"},[s._v("'Likes: '")]),s._v(", LikeBox(likes),\n    LikeButton(onClick)\n  ]);\n}\n\n"),t("span",{staticClass:"hljs-comment"},[s._v("// 实现细节")]),s._v("\n\n"),t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" likes = "),t("span",{staticClass:"hljs-number"},[s._v("0")]),s._v(";\n"),t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),t("span",{staticClass:"hljs-title"},[s._v("addOneMoreLike")]),s._v("("),t("span",{staticClass:"hljs-params"}),s._v(") ")]),s._v("{\n  likes++;\n  rerender();\n}\n\n"),t("span",{staticClass:"hljs-comment"},[s._v("// 初始化")]),s._v("\n\nFancyNameBox(\n  { "),t("span",{staticClass:"hljs-attr"},[s._v("firstName")]),s._v(": "),t("span",{staticClass:"hljs-string"},[s._v("'Sebastian'")]),s._v(", "),t("span",{staticClass:"hljs-attr"},[s._v("lastName")]),s._v(": "),t("span",{staticClass:"hljs-string"},[s._v("'Markbåge'")]),s._v(" },\n  likes,\n  addOneMoreLike\n);\n")])]),s._v(" "),t("p",[t("em",[s._v("注意：本例更新状态时会带来副作用（addOneMoreLike 函数中）。我实际的想法是当一个“update”传入时我们返回下一个版本的状态，但那样会比较复杂。此示例待更新")])]),s._v(" "),t("h2",{attrs:{id:"memoization"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#memoization","aria-hidden":"true"}},[s._v("#")]),s._v(" Memoization")]),s._v(" "),t("p",[s._v("对于纯函数，使用相同的参数一次次调用未免太浪费资源。我们可以创建一个函数的 memorized 版本，用来追踪最后一个参数和结果。这样如果我们继续使用同样的值，就不需要反复执行它了。")]),s._v(" "),t("pre",{staticClass:"hljs"},[t("code",[t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),t("span",{staticClass:"hljs-title"},[s._v("memoize")]),s._v("("),t("span",{staticClass:"hljs-params"},[s._v("fn")]),s._v(") ")]),s._v("{\n  "),t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" cachedArg;\n  "),t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" cachedResult;\n  "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" "),t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v("("),t("span",{staticClass:"hljs-params"},[s._v("arg")]),s._v(") ")]),s._v("{\n    "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (cachedArg === arg) {\n      "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" cachedResult;\n    }\n    cachedArg = arg;\n    cachedResult = fn(arg);\n    "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" cachedResult;\n  };\n}\n\n"),t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" MemoizedNameBox = memoize(NameBox);\n\n"),t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),t("span",{staticClass:"hljs-title"},[s._v("NameAndAgeBox")]),s._v("("),t("span",{staticClass:"hljs-params"},[s._v("user, currentTime")]),s._v(") ")]),s._v("{\n  "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" FancyBox([\n    "),t("span",{staticClass:"hljs-string"},[s._v("'Name: '")]),s._v(",\n    MemoizedNameBox(user.firstName + "),t("span",{staticClass:"hljs-string"},[s._v("' '")]),s._v(" + user.lastName),\n    "),t("span",{staticClass:"hljs-string"},[s._v("'Age in milliseconds: '")]),s._v(",\n    currentTime - user.dateOfBirth\n  ]);\n}\n")])]),s._v(" "),t("h2",{attrs:{id:"%E5%88%97%E8%A1%A8%EF%BC%88lists%EF%BC%89"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#%E5%88%97%E8%A1%A8%EF%BC%88lists%EF%BC%89","aria-hidden":"true"}},[s._v("#")]),s._v(" 列表（Lists）")]),s._v(" "),t("p",[s._v("大部分 UI 都是展示列表数据中不同 item 的列表结构。这是一个天然的层级。")]),s._v(" "),t("p",[s._v("为了管理列表中的每一个 item 的 state ，我们可以创造一个 Map 容纳具体 item 的 state。")]),s._v(" "),t("pre",{staticClass:"hljs"},[t("code",[t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),t("span",{staticClass:"hljs-title"},[s._v("UserList")]),s._v("("),t("span",{staticClass:"hljs-params"},[s._v("users, likesPerUser, updateUserLikes")]),s._v(") ")]),s._v("{\n  "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" users.map("),t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-params"},[s._v("user")]),s._v(" =>")]),s._v(" FancyNameBox(\n    user,\n    likesPerUser.get(user.id),\n    () => updateUserLikes(user.id, likesPerUser.get(user.id) + "),t("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(")\n  ));\n}\n\n"),t("span",{staticClass:"hljs-keyword"},[s._v("var")]),s._v(" likesPerUser = "),t("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" "),t("span",{staticClass:"hljs-built_in"},[s._v("Map")]),s._v("();\n"),t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),t("span",{staticClass:"hljs-title"},[s._v("updateUserLikes")]),s._v("("),t("span",{staticClass:"hljs-params"},[s._v("id, likeCount")]),s._v(") ")]),s._v("{\n  likesPerUser.set(id, likeCount);\n  rerender();\n}\n\nUserList(data.users, likesPerUser, updateUserLikes);\n")])]),s._v(" "),t("p",[t("em",[s._v("注意：现在我们向 FancyNameBox 传了多个不同的参数。这打破了我们的 memoization 因为我们每次只能存储一个值。更多相关内容在下面。")])]),s._v(" "),t("h2",{attrs:{id:"%E8%BF%9E%E7%BB%AD%E6%80%A7%EF%BC%88continuations%EF%BC%89"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#%E8%BF%9E%E7%BB%AD%E6%80%A7%EF%BC%88continuations%EF%BC%89","aria-hidden":"true"}},[s._v("#")]),s._v(" 连续性（Continuations）")]),s._v(" "),t("p",[s._v("不幸的是，自从 UI 中有太多的列表，明确的管理就需要大量的重复性样板代码。")]),s._v(" "),t("p",[s._v("我们可以通过推迟一些函数的执行，进而把一些模板移出业务逻辑。比如，使用“柯里化”（JavaScript 中的 "),t("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind"}},[t("code",[s._v("bind")])]),s._v("）。然后我们可以从核心的函数外面传递 state，这样就没有样板代码了。")]),s._v(" "),t("p",[s._v("下面这样并没有减少样板代码，但至少把它从关键业务逻辑中剥离。")]),s._v(" "),t("pre",{staticClass:"hljs"},[t("code",[t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),t("span",{staticClass:"hljs-title"},[s._v("FancyUserList")]),s._v("("),t("span",{staticClass:"hljs-params"},[s._v("users")]),s._v(") ")]),s._v("{\n  "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" FancyBox(\n    UserList.bind("),t("span",{staticClass:"hljs-literal"},[s._v("null")]),s._v(", users)\n  );\n}\n\n"),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" box = FancyUserList(data.users);\n"),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" resolvedChildren = box.children(likesPerUser, updateUserLikes);\n"),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" resolvedBox = {\n  ...box,\n  "),t("span",{staticClass:"hljs-attr"},[s._v("children")]),s._v(": resolvedChildren\n};\n")])]),s._v(" "),t("h2",{attrs:{id:"state-map"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#state-map","aria-hidden":"true"}},[s._v("#")]),s._v(" State Map")]),s._v(" "),t("p",[s._v("之前我们知道可以使用组合避免重复执行相同的东西这样一种重复模式。我们可以把执行和传递 state 逻辑挪动到被复用很多的低层级的函数中去。")]),s._v(" "),t("pre",{staticClass:"hljs"},[t("code",[t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),t("span",{staticClass:"hljs-title"},[s._v("FancyBoxWithState")]),s._v("("),t("span",{staticClass:"hljs-params"},[s._v("\n  children,\n  stateMap,\n  updateState\n")]),s._v(") ")]),s._v("{\n  "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" FancyBox(\n    children.map("),t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-params"},[s._v("child")]),s._v(" =>")]),s._v(" child.continuation(\n      stateMap.get(child.key),\n      updateState\n    ))\n  );\n}\n\n"),t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),t("span",{staticClass:"hljs-title"},[s._v("UserList")]),s._v("("),t("span",{staticClass:"hljs-params"},[s._v("users")]),s._v(") ")]),s._v("{\n  "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" users.map("),t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-params"},[s._v("user")]),s._v(" =>")]),s._v(" {\n    "),t("span",{staticClass:"hljs-attr"},[s._v("continuation")]),s._v(": FancyNameBox.bind("),t("span",{staticClass:"hljs-literal"},[s._v("null")]),s._v(", user),\n    "),t("span",{staticClass:"hljs-attr"},[s._v("key")]),s._v(": user.id\n  });\n}\n\n"),t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),t("span",{staticClass:"hljs-title"},[s._v("FancyUserList")]),s._v("("),t("span",{staticClass:"hljs-params"},[s._v("users")]),s._v(") ")]),s._v("{\n  "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" FancyBoxWithState.bind("),t("span",{staticClass:"hljs-literal"},[s._v("null")]),s._v(",\n    UserList(users)\n  );\n}\n\n"),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" continuation = FancyUserList(data.users);\ncontinuation(likesPerUser, updateUserLikes);\n")])]),s._v(" "),t("h2",{attrs:{id:"memoization-map"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#memoization-map","aria-hidden":"true"}},[s._v("#")]),s._v(" Memoization Map")]),s._v(" "),t("p",[s._v("一旦我们想在一个 memoization 列表中 memoize 多个 item 就会变得很困难。因为你需要制定复杂的缓存算法来平衡调用频率和内存占有率。")]),s._v(" "),t("p",[s._v("还好 UI 在同一个位置会相对的稳定。相同的位置一般每次都会接受相同的参数。这样以来，使用一个集合来做 memoization 是一个非常好用的策略。")]),s._v(" "),t("p",[s._v("我们可以用对待 state 同样的方式，在组合的函数中传递一个 memoization 缓存。")]),s._v(" "),t("pre",{staticClass:"hljs"},[t("code",[t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),t("span",{staticClass:"hljs-title"},[s._v("memoize")]),s._v("("),t("span",{staticClass:"hljs-params"},[s._v("fn")]),s._v(") ")]),s._v("{\n  "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" "),t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v("("),t("span",{staticClass:"hljs-params"},[s._v("arg, memoizationCache")]),s._v(") ")]),s._v("{\n    "),t("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (memoizationCache.arg === arg) {\n      "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" memoizationCache.result;\n    }\n    "),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" result = fn(arg);\n    memoizationCache.arg = arg;\n    memoizationCache.result = result;\n    "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" result;\n  };\n}\n\n"),t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),t("span",{staticClass:"hljs-title"},[s._v("FancyBoxWithState")]),s._v("("),t("span",{staticClass:"hljs-params"},[s._v("\n  children,\n  stateMap,\n  updateState,\n  memoizationCache\n")]),s._v(") ")]),s._v("{\n  "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" FancyBox(\n    children.map("),t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-params"},[s._v("child")]),s._v(" =>")]),s._v(" child.continuation(\n      stateMap.get(child.key),\n      updateState,\n      memoizationCache.get(child.key)\n    ))\n  );\n}\n\n"),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" MemoizedFancyNameBox = memoize(FancyNameBox);\n")])]),s._v(" "),t("h2",{attrs:{id:"%E4%BB%A3%E6%95%B0%E6%95%88%E5%BA%94%EF%BC%88algebraic-effects%EF%BC%89"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#%E4%BB%A3%E6%95%B0%E6%95%88%E5%BA%94%EF%BC%88algebraic-effects%EF%BC%89","aria-hidden":"true"}},[s._v("#")]),s._v(" 代数效应（Algebraic Effects）")]),s._v(" "),t("p",[s._v("多层抽象需要共享琐碎数据时，一层层传递数据非常麻烦。如果能有一种方式可以在多层抽象中快捷地传递数据，同时又不需要牵涉到中间层级，那该有多好。React 中我们把它叫做“context”。")]),s._v(" "),t("p",[s._v("有时候数据依赖并不是严格按照抽象树自上而下进行。举个例子，在布局算法中，你需要在实现他们的位置之前了解子节点的大小。")]),s._v(" "),t("p",[s._v("现在，这个例子有一点超纲。我会使用 "),t("a",{attrs:{href:"http://math.andrej.com/eff/"}},[s._v("代数效应")]),s._v(" 这个由我发起的 "),t("a",{attrs:{href:"https://esdiscuss.org/topic/one-shot-delimited-continuations-with-effect-handlers"}},[s._v("ECMAScript 新特性提议")]),s._v("。如果你对函数式编程很熟悉，它们 在避免由 monad 强制引入的仪式一样的编码。")]),s._v(" "),t("pre",{staticClass:"hljs"},[t("code",[t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),t("span",{staticClass:"hljs-title"},[s._v("ThemeBorderColorRequest")]),s._v("("),t("span",{staticClass:"hljs-params"}),s._v(") ")]),s._v("{ }\n\n"),t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),t("span",{staticClass:"hljs-title"},[s._v("FancyBox")]),s._v("("),t("span",{staticClass:"hljs-params"},[s._v("children")]),s._v(") ")]),s._v("{\n  "),t("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" color = raise "),t("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" ThemeBorderColorRequest();\n  "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" {\n    "),t("span",{staticClass:"hljs-attr"},[s._v("borderWidth")]),s._v(": "),t("span",{staticClass:"hljs-string"},[s._v("'1px'")]),s._v(",\n    "),t("span",{staticClass:"hljs-attr"},[s._v("borderColor")]),s._v(": color,\n    "),t("span",{staticClass:"hljs-attr"},[s._v("children")]),s._v(": children\n  };\n}\n\n"),t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),t("span",{staticClass:"hljs-title"},[s._v("BlueTheme")]),s._v("("),t("span",{staticClass:"hljs-params"},[s._v("children")]),s._v(") ")]),s._v("{\n  "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" "),t("span",{staticClass:"hljs-keyword"},[s._v("try")]),s._v(" {\n    children();\n  } "),t("span",{staticClass:"hljs-keyword"},[s._v("catch")]),s._v(" effect ThemeBorderColorRequest -> [, continuation] {\n    continuation("),t("span",{staticClass:"hljs-string"},[s._v("'blue'")]),s._v(");\n  }\n}\n\n"),t("span",{staticClass:"hljs-function"},[t("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" "),t("span",{staticClass:"hljs-title"},[s._v("App")]),s._v("("),t("span",{staticClass:"hljs-params"},[s._v("data")]),s._v(") ")]),s._v("{\n  "),t("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" BlueTheme(\n    FancyUserList.bind("),t("span",{staticClass:"hljs-literal"},[s._v("null")]),s._v(", data.users)\n  );\n}\n")])])])}]},e=t("VU/8")(null,n,!1,null,null,null);a.default=e.exports}});
//# sourceMappingURL=4.2e0fcd33b6d01d119348.js.map